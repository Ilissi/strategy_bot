const Markup = require('telegraf/markup')

class Keyboards {
    getStrategy() {
        return Markup.inlineKeyboard([
            [Markup.callbackButton('–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–∞—èÔ∏è', '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–∞—èÔ∏è')],
            [Markup.callbackButton('–°—Ä–µ–¥–Ω–µ—Å—Ä–æ—á–Ω–∞—è', '–°—Ä–µ–¥–Ω–µ—Å—Ä–æ—á–Ω–∞—è')],
            [Markup.callbackButton('–¢–æ—Ä–≥–æ–≤–∞—è(swing)', '–¢–æ—Ä–≥–æ–≤–∞—è(swing)')],
            [Markup.callbackButton('–ü–æ–≤—ã—à–µ–Ω–Ω—ã–π —Ä–∏—Å–∫', '–ü–æ–≤—ã—à–µ–Ω–Ω—ã–π —Ä–∏—Å–∫')],
        ]).extra();
    }

    strategySource() {
        return Markup.inlineKeyboard([
            [Markup.callbackButton('–õ–∏—á–Ω–∞—è', '–õ–∏—á–Ω–∞—è')],
            [Markup.callbackButton('–ü–ª–∞—Ç–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫', '–ü–ª–∞—Ç–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫')]
        ]).extra();
    }

    confirmStrategy() {
        return Markup.inlineKeyboard(
            [Markup.callbackButton('C—Ç—Ä–∞—Ç–µ–≥–∏—è –ª–∏—á–Ω–∞—è', '–õ–∏—á–Ω–∞—è')]).extra()
    }

    getOrder() {
        return Markup.inlineKeyboard([
            Markup.callbackButton('Sell', 'Sell'),
            Markup.callbackButton('Buy', 'Buy')]).extra();
    }

    addUser(telegram_id) {
        return Markup.inlineKeyboard([
            [Markup.callbackButton('–ê–Ω–∞–ª–∏—Ç–∏–∫', `updateStatus ${telegram_id} –ê–Ω–∞–ª–∏—Ç–∏–∫`)],
            [Markup.callbackButton('–†–∏—Å–∫-–º–µ–Ω–µ–¥–∂–µ—Ä', `updateStatus ${telegram_id} –†–∏—Å–∫-–º–µ–Ω–µ–¥–∂–µ—Ä`)],
            [Markup.callbackButton('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', `updateStatus ${telegram_id} –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä`)],
            [Markup.callbackButton('–û—Ç–∫–ª–æ–Ω–∏—Ç—å', `updateStatus ${telegram_id} –û—Ç–∫–ª–æ–Ω–∏—Ç—å`)]]).extra();
    }

    acceptIdea() {
        return Markup.inlineKeyboard([
            Markup.callbackButton('–û–ö', '–û–ö'),
            Markup.callbackButton('–û–¢–ú–ï–ù–ê', '–û–¢–ú–ï–ù–ê')]).extra();
    }

    riskKeyboard(){
        return Markup.inlineKeyboard([
            [Markup.callbackButton('4Ô∏è‚É£', '4'),
                Markup.callbackButton('5Ô∏è‚É£', '5')],
            [Markup.callbackButton('2Ô∏è‚É£', '2'),
                Markup.callbackButton('3Ô∏è‚É£', '3')],
            [Markup.callbackButton('1Ô∏è‚É£', '1')]]).extra();
    }

    acceptGrade(uuid, ticker){
        return Markup.inlineKeyboard([Markup.callbackButton('–û—Ü–µ–Ω–∏—Ç—å –∏–¥–µ—é', `grade ${uuid} ${ticker}`)]).extra();
    }

    insertGrade(){
        return Markup.inlineKeyboard([
            [Markup.callbackButton('1Ô∏è‚É£', '1'), Markup.callbackButton('2Ô∏è‚É£', '2'), Markup.callbackButton('3Ô∏è‚É£', '3')],
            [Markup.callbackButton('4Ô∏è‚É£', '4'), Markup.callbackButton('5Ô∏è‚É£', '5'), Markup.callbackButton('6Ô∏è‚É£', '6')],
            [Markup.callbackButton('7Ô∏è‚É£', '7'), Markup.callbackButton('8Ô∏è‚É£', '8'), Markup.callbackButton('9Ô∏è‚É£', '9')],
            [Markup.callbackButton('üîü', '10')]]).extra();
    }

    acceptIdeaChannel(uuid){
        return Markup.inlineKeyboard([[Markup.callbackButton('–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤ –∫–∞–Ω–∞–ª', `channel ${uuid}`)],
            [Markup.callbackButton('–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤ WatchList', `watchlist ${uuid}`)],
            [Markup.callbackButton('–û—Ç–∫–∞–∑', `cancel ${uuid}`)]]).extra();
    }

    changePermissions(user_id){
        return Markup.inlineKeyboard([Markup.callbackButton('–ü–æ–º–µ–Ω—è—Ç—å —Ä–æ–ª—å', `change ${user_id}`)]).extra();
    }
}

module.exports = new Keyboards()